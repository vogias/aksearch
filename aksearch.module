<?php

/**
 * Implementation of hook_menu().
 */
function aksearch_menu() {
	$items['admin/config/aksearch'] = array(
			'title' => 'eduOER Search configuration',
			'description' => 'Specify options for eduOER Search module.',
			'position' => 'right',
			'weight' => -5,
			'page callback' => 'system_admin_menu_block_page',
			'access arguments' => array('administer site configuration'),
			'file' => 'system.admin.inc',
			'file path' => drupal_get_path('module', 'system'),
	);
	$items['admin/config/aksearch/settings'] = array(
			'title' => 'eduOER Search settings',
			'description' => 'Change how eduOER Search behaves.',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('aksearch_admin_settings'),
			'access arguments' => array('administer site configuration'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'aksearch.admin.inc',
	);
	$items['akconf'] = array(
			'page callback' => 'aknode_config',
			'page arguments' => array(1),
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
	);
	return $items;
}

/**
 * Menu callback for aksearch node configuration
 */
function aknode_config($n){
	$result = db_query('SELECT conf FROM {aksearch_conf} WHERE nid = :nid LIMIT 1', array(':nid' => $n));
	echo $result->fetchField();
	drupal_exit();
}

/**
* Implements hook_node_info()
*/
function aksearch_node_info() {
return array(
	'aksearch' => array(
	'name' => t('eduOER search type'),
	'base' => 'aksearch',
	'description' => t('Use this content type to create a node used to search.'),
	'has_title' => TRUE,
	'title_label' => t('Title'),
	'help' => t('Enter the title'),
	),
);
}

/**
* Implements hook_form()
*/
function aksearch_form($node, $form_state) {
return node_content_form($node, $form_state);
}

/**
 * Implements hook_insert()
 */
function aksearch_insert($node){

$cf = file_get_contents(drupal_get_path('module','aksearch').'/default/config/conf.json');
$r = db_insert('aksearch_conf')
->fields(array(
'nid' => $node->nid,
'conf' => $cf,
))
->execute();
	
	
}

/**
* Implements hook_view()
*/
function aksearch_view($node){
	$issearch = $node->nid == variable_get('aksearch_spage',0) ? true : false ;

		$node->content['body'] = array(
			'#markup' => theme('aksearch', 
				array('cont'=> $node->body,'search' => $issearch , 'nif' => $node->nid)
			),
			'#weight' => 1,
			);
	return $node;

}

/**
* Implements hook_theme()
*/
function aksearch_theme() {
return array(
    'aksearch' => array(
      'variables' => array('cont'=> '','search' => true , 'nif' => 0),
      'template' => 'aksearch',
    ),
	);
}
